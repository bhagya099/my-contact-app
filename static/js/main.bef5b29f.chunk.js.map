{"version":3,"sources":["Todoitem.js","todoData.js","App.js","index.js"],"names":["Todoitem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fonStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","prevState","console","log","updatedTodos","map","todo","todoiTems","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAGe,SAASA,EAASC,GAO7B,OACI,sBAAKC,UAAU,YAAf,UACI,uBACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACrBC,SAAY,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAEnD,mBAAGC,MAAST,EAAMI,KAAKC,UAbR,CACnBK,SAAU,SACVC,MAAO,OACPC,eAAgB,gBAUwC,KAApD,SAA2DZ,EAAMI,KAAKS,UCjBlF,IAiCkBC,EAjCA,CACd,CACEN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,kBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,eACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,cACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,YACNR,WAAW,ICYFU,EApCf,kDACE,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAEDgB,MAAQ,CACXC,MAAOH,GAET,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBANH,EADrB,gDASE,SAAaV,GACXW,KAAKC,UAAS,SAACC,GACbC,QAAQC,IAAIF,GAEZ,IAAMG,EAAeH,EAAUJ,MAAMQ,KAAI,SAACC,GAIxC,OAHIA,EAAKlB,KAAOA,IACdkB,EAAKrB,WAAaqB,EAAKrB,WAElBqB,KAGT,OADAJ,QAAQC,IAAIC,GACL,CACLP,MAAOO,QArBf,oBA0BE,WAAU,IAAD,OACDG,EAAYR,KAAKH,MAAMC,MAAMQ,KAAI,SAACrB,GAAD,OACrC,cAACL,EAAD,CAAwBK,KAAMA,EAAMG,aAAc,EAAKA,cAAxCH,EAAKI,OAGtB,OAAQ,qBAAKP,UAAU,YAAf,SACL0B,QAhCP,GAAyBC,IAAMC,WCA/BC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.bef5b29f.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css'\n\nexport default function Todoitem(props) {\n    const completedStyle = {\n        fonStyle: \"italic\",\n        color: \"grey\",\n        textDecoration: \"line-through\",\n      };\n     \n    return (\n        <div className=\"todo-item\">\n            <input\n                type=\"checkbox\"\n                checked={props.item.completed}\n               onChange = {() => props.handleChange(props.item.id)}\n            />\n            <p style = {props.item.completed ? completedStyle : null}>{props.item.text}</p>\n            </div>\n    )\n}\n\n","const todosData = [\n    {\n      id: 1,\n      text: \"Take out the trash\",\n      completed: true,\n    },\n    {\n      id: 2,\n      text: \"Grocery shopping\",\n      completed: false,\n    },\n    {\n      id: 3,\n      text: \"Clean fish tank\",\n      completed: false,\n    },\n    {\n      id: 4,\n      text: \"Mow the lawn\",\n      completed: false,\n    },\n    {\n      id: 5,\n      text: \"Learn React\",\n      completed: true,\n    },\n    {\n      id: 6,\n      text: \"Take Rest\",\n      completed: false,\n    },\n   ];\n    \n   export default todosData;\n   ","import React from 'react';\nimport Todoitem from './Todoitem';\nimport './index.css';\nimport todosData from './todoData';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      todos: todosData\n    };\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(id) {\n    this.setState((prevState) => {\n      console.log(prevState);\n      //alert((JSON.stringify(prevState.todos[0].id)));\n      const updatedTodos = prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      console.log(updatedTodos);\n      return {\n        todos: updatedTodos,\n      };\n    });\n \n  }\n  render() {\n    const todoiTems = this.state.todos.map((item) => (\n      <Todoitem key={item.id} item={item} handleChange={this.handleChange}/>\n    ));\n \n    return (<div className=\"tood-list\">\n      {todoiTems}\n      </div>)\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App /> ,document.getElementById('root'));"],"sourceRoot":""}